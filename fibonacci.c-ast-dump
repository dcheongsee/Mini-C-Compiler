Program(FunDef(VOID,main,Block(VarDecl(INT,n),VarDecl(INT,first),VarDecl(INT,second),VarDecl(INT,next),VarDecl(INT,c),VarDecl(CHAR,t),Assign(VarExpr(n),FunCallExpr(read_i)),Assign(VarExpr(first),0),Assign(VarExpr(second),1),FunCallExpr(print_s,TypecastExpr(CHAR,First )),FunCallExpr(print_i,VarExpr(n)),FunCallExpr(print_s,TypecastExpr(CHAR, terms of Fibonacci series are : )),Assign(VarExpr(c),0),While(VarExpr(c),LT,VarExpr(n),Block(If(VarExpr(c),LE,1,Assign(VarExpr(next),VarExpr(c)),Block(Assign(VarExpr(next),VarExpr(first),ADD,VarExpr(second)),Assign(VarExpr(first),VarExpr(second)),Assign(VarExpr(second),VarExpr(next)))),FunCallExpr(print_i,VarExpr(next)),FunCallExpr(print_s,TypecastExpr(CHAR, )),Assign(VarExpr(c),VarExpr(c),ADD,1))))))